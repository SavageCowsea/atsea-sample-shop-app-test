{
  "stats": {
    "suites": 5,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2021-12-06T02:50:14.792Z",
    "end": "2021-12-06T02:50:15.698Z",
    "duration": 906,
    "testsRegistered": 15,
    "passPercent": 93.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "f71eeeb4-2da8-4e58-bfd5-18eacb6f01ab",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "The correct order should be update",
          "fullTitle": "The correct order should be update",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const order = {\n  orderId: 1,\n  orderDate: \"1996-01-28TI19:52:39Z\",\n  customerId: \"123456789\",\n  productsOrdered: { 1: 3, 2: 4, 3: 2 },\n};\nconst response = await put(\n  \"http://localhost:8080/api/order/ \" + order.orderId\n)\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\")\n  .send(order);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property(\"orderId\");\nexpect(response.body.address).to.equal(order.orderDate);\nexpect(response.body.address).to.equal(order.customerId);\nexpect(response.body.phone).to.equal(order.productsOrdered);",
          "err": {},
          "uuid": "77cef9d0-f2f1-46b8-a353-bc4dc1add551",
          "parentUUID": "f71eeeb4-2da8-4e58-bfd5-18eacb6f01ab",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "eef5b3d9-0a5e-42d8-b5d7-5bebf98e67b3",
          "title": "First Api Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/example.test.js",
          "file": "/test/api/example.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 340,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get('http://httpbin.org/ip');\n      \nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('origin');",
              "err": {},
              "uuid": "f322d8e6-25eb-4f36-9649-c4732bc9a89a",
              "parentUUID": "eef5b3d9-0a5e-42d8-b5d7-5bebf98e67b3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f322d8e6-25eb-4f36-9649-c4732bc9a89a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 340,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "3a7f0fd9-d9ac-446e-916c-07bfc6236191",
          "title": "Login And Purchase",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/loginAndPurchase.test.js",
          "file": "/test/api/loginAndPurchase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create customer",
              "fullTitle": "Login And Purchase Create customer",
              "timedOut": false,
              "duration": 61,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .post(\"http://localhost:8080/api/customer/\")\n  .send({\n    customerId: 1,\n    name: \"Sally Vallery\",\n    address: \"144 Townsend, San Francisco 99999\",\n    email: \"sally@example.com\",\n    phone: \"513 222 5555\",\n    username: \"sallyv\",\n    password: \"sallypassword\",\n    enabled: \"true\",\n    role: \"USER\",\n  })\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property(\"customerId\");\ncustomerTestId = response.body.customerId; ///User Id\ncustomerName = response.body.name; ///User Name",
              "err": {},
              "uuid": "481e8455-3a2d-4dd3-88b4-6bcb4bd3fd67",
              "parentUUID": "3a7f0fd9-d9ac-446e-916c-07bfc6236191",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login",
              "fullTitle": "Login And Purchase Login",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .post(`http://localhost:8080/login/`)\n  .set(\"Content-Type\", \"application/json\")\n  .set(\"Accept\", \"application/json\")\n  .send({\n    username: \"sallyv\",\n    password: \"sallypassword\",\n  });\ntoken = response.body.token;\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "3b6df7d1-7fd7-4656-85b9-6cdfa34971e3",
              "parentUUID": "3a7f0fd9-d9ac-446e-916c-07bfc6236191",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purchase",
              "fullTitle": "Login And Purchase Purchase",
              "timedOut": false,
              "duration": 10,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .get(\"http://localhost:8080/purchase/\")\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\")\n  .set(\"Authorization\", `Bearer ${token}`);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property(\"message\");",
              "err": {},
              "uuid": "e6ebb16e-8a4f-415e-81aa-648cc148a063",
              "parentUUID": "3a7f0fd9-d9ac-446e-916c-07bfc6236191",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete all customers in system",
              "fullTitle": "Login And Purchase Delete all customers in system",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .del(`http://localhost:8080/api/customer/`)\n  .set(\"User-Agent\", \"agent\")\n  .set(\"Content-Type\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "bf5e2f9f-5de2-45ec-b7f4-91f98b5e1d7a",
              "parentUUID": "3a7f0fd9-d9ac-446e-916c-07bfc6236191",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "481e8455-3a2d-4dd3-88b4-6bcb4bd3fd67",
            "3b6df7d1-7fd7-4656-85b9-6cdfa34971e3",
            "e6ebb16e-8a4f-415e-81aa-648cc148a063",
            "bf5e2f9f-5de2-45ec-b7f4-91f98b5e1d7a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 110,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
          "title": "Order Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/order.test.js",
          "file": "/test/api/order.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create an order",
              "fullTitle": "Order Tests Create an order",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .post(\"http://localhost:8080/api/order/\")\n  .send({\n    orderId: 1,\n    orderDate: \"2017-02-28T19:52:39Z\",\n    customerId: \"54321\",\n    productsOrdered: { 1: 1, 2: 1, 3: 1 },\n  })\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property(\"orderId\");\norderTestId = response.body.orderId;",
              "err": {},
              "uuid": "7a5a3923-2075-430c-b712-8dd18f65b274",
              "parentUUID": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get all orders",
              "fullTitle": "Order Tests Get all orders",
              "timedOut": false,
              "duration": 24,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax\n  .get(\"http://localhost:8080/api/order/\")\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body.length).to.equal(1);",
              "err": {},
              "uuid": "33319a2e-0ee4-4d36-acd2-f0fb9a993a99",
              "parentUUID": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get order by Id",
              "fullTitle": "Order Tests Get order by Id",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax\n  .get(\"http://localhost:8080/api/order/\" + id)\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property(\"orderId\");\nexpect(response.body).to.have.property(\"customerId\");\nexpect(response.body).to.have.property(\"productsOrdered\");",
              "err": {},
              "uuid": "3871daa9-e922-4522-a2d6-b6665f38d6d3",
              "parentUUID": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update an order",
              "fullTitle": "Order Tests Update an order",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "it(\"The correct order should be update\", async () => {\n  const order = {\n    orderId: 1,\n    orderDate: \"1996-01-28TI19:52:39Z\",\n    customerId: \"123456789\",\n    productsOrdered: { 1: 3, 2: 4, 3: 2 },\n  };\n  const response = await put(\n    \"http://localhost:8080/api/order/ \" + order.orderId\n  )\n    .set(\"Content-type\", \"application/json\")\n    .set(\"Accept\", \"application/json\")\n    .send(order);\n  expect(response.status).to.equal(StatusCodes.OK);\n  expect(response.body).to.have.property(\"orderId\");\n  expect(response.body.address).to.equal(order.orderDate);\n  expect(response.body.address).to.equal(order.customerId);\n  expect(response.body.phone).to.equal(order.productsOrdered);\n});",
              "err": {},
              "uuid": "dc5c0297-e1f7-4d56-a427-13b4ddf53461",
              "parentUUID": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete order by Id",
              "fullTitle": "Order Tests Delete order by Id",
              "timedOut": false,
              "duration": 33,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax\n  .delete(\"http://localhost:8080/api/order/\" + id)\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "21182b3d-6416-4815-996d-fdd1c1c71eb7",
              "parentUUID": "29bc02eb-fcd3-4f96-a41b-c1f6943d1f76",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7a5a3923-2075-430c-b712-8dd18f65b274",
            "33319a2e-0ee4-4d36-acd2-f0fb9a993a99",
            "3871daa9-e922-4522-a2d6-b6665f38d6d3",
            "dc5c0297-e1f7-4d56-a427-13b4ddf53461",
            "21182b3d-6416-4815-996d-fdd1c1c71eb7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "aeaf3c8b-1124-4bc8-ada5-ff093335a4fb",
          "title": "Products",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/products.test.js",
          "file": "/test/api/products.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Getting all products",
              "fullTitle": "Products Getting all products",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.get('http://localhost:8080/api/product/')\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "2468dfde-6a7c-4d0f-82aa-22b59a281494",
              "parentUUID": "aeaf3c8b-1124-4bc8-ada5-ff093335a4fb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting single product by ID",
              "fullTitle": "Products Getting single product by ID",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 1;\nconst response = await ajax.get('http://localhost:8080/api/product/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('description');\nexpect(response.body).to.have.property('name');\nexpect(response.body).to.have.property('productId');",
              "err": {},
              "uuid": "3d780adb-acf0-4b95-a43e-84e9e3f56902",
              "parentUUID": "aeaf3c8b-1124-4bc8-ada5-ff093335a4fb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2468dfde-6a7c-4d0f-82aa-22b59a281494",
            "3d780adb-acf0-4b95-a43e-84e9e3f56902"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "0ef42168-a8ab-4788-b847-5a8aa6f5854c",
          "title": "System utilities Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/systemUtilities.test.js",
          "file": "/test/api/systemUtilities.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Database healtcheck",
              "fullTitle": "System utilities Tests Database healtcheck",
              "timedOut": false,
              "duration": 252,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get(\"http://localhost:8080//utility/healthcheck/\")\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property(\"status\");",
              "err": {},
              "uuid": "15ee3f51-8ef0-4411-9c7f-09076ed4b6a1",
              "parentUUID": "0ef42168-a8ab-4788-b847-5a8aa6f5854c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting container ID using GET",
              "fullTitle": "System utilities Tests Getting container ID using GET",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get(\"http://localhost:8080//utility/containerid/\")\n  .set(\"Content-type\", \"application/json\")\n  .set(\"Accept\", \"application/json\");\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property(\"host\");\nexpect(response.body).to.have.property(\"ip\");",
              "err": {},
              "uuid": "6d1b9f0c-6a5f-4317-9554-1b5fd61ee24c",
              "parentUUID": "0ef42168-a8ab-4788-b847-5a8aa6f5854c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "15ee3f51-8ef0-4411-9c7f-09076ed4b6a1",
            "6d1b9f0c-6a5f-4317-9554-1b5fd61ee24c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 260,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "77cef9d0-f2f1-46b8-a353-bc4dc1add551"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}