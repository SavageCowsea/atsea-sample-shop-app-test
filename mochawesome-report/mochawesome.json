{
  "stats": {
    "suites": 6,
    "tests": 19,
    "passes": 18,
    "pending": 0,
    "failures": 1,
    "start": "2021-12-05T08:05:08.168Z",
    "end": "2021-12-05T08:05:08.857Z",
    "duration": 689,
    "testsRegistered": 21,
    "passPercent": 85.71428571428571,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 2,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "a1c711a1-702d-438a-8e53-538b78128a03",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "A costumer must be show",
          "fullTitle": "A costumer must be show",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const response = await get('http://localhost:8080/api/customer/username='+customerName)\n    .set('User-Agent', 'agent') /// borrar maybe(?)\n    .set('Content-Type', 'application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('name');\nexpect(response.body.name).to.equal(customerName);",
          "err": {},
          "uuid": "bba6a6a7-0322-44a3-80d6-687833b53fc9",
          "parentUUID": "a1c711a1-702d-438a-8e53-538b78128a03",
          "isHook": false,
          "skipped": true
        },
        {
          "title": "The correct costumer should be update",
          "fullTitle": "The correct costumer should be update",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "const customer = {\n    \"customerId\": customerTestId,\n    \"name\": \"Sally Vallery\",\n    \"address\": \"Arcane street\",\n    \"email\": \"jinxed@XD.com\",\n    \"phone\": \"32467991632\",\n    \"username\": \"definitelynotjinx\",\n    \"password\": \"wtfjinx\",\n    \"enabled\": \"true\",\n    \"role\": \"USER\"\n};\n\nconst response = await put('http://localhost:8080/api/customer/'+customerTestId)\n    .set('Content-type','application/json')\n    .set('Accept','application/json')\n    .send(customer);\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('customerId');\nexpect(response.body.address).to.equal(customer.address);\nexpect(response.body.address).to.equal(customer.email);\nexpect(response.body.phone).to.equal(customer.phone);\nexpect(response.body.address).to.equal(customer.username);\nexpect(response.body.password).to.equal(customer.password);",
          "err": {},
          "uuid": "4064737a-d976-4588-aa45-9436941f5ee3",
          "parentUUID": "a1c711a1-702d-438a-8e53-538b78128a03",
          "isHook": false,
          "skipped": true
        }
      ],
      "suites": [
        {
          "uuid": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
          "title": "Customer tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/customer.test.js",
          "file": "/test/api/customer.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create customer",
              "fullTitle": "Customer tests Create customer",
              "timedOut": false,
              "duration": 84,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.post('http://localhost:8080/api/customer/')\n    .send({\n        \"customerId\" : 1,\n        \"name\"       : \"Sally Vallery\",\n        \"address\"    : \"144 Townsend, San Francisco 99999\",\n        \"email\"      : \"sally@example.com\",\n        \"phone\"      : \"513 222 5555\",\n        \"username\"   : \"sallyv\",\n        \"password\"   : \"sallypassword\",\n        \"enabled\"    : \"true\",\n        \"role\"       : \"USER\"\n    })\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property('customerId');\ncustomerTestId = response.body.customerId;  ///User Id\ncustomerName = response.body.name;  ///User Name",
              "err": {},
              "uuid": "63a51af7-22da-4547-bf4d-d7709fee82d1",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get customer by Id",
              "fullTitle": "Customer tests Get customer by Id",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = customerTestId;   \nconst response = await get('http://localhost:8080/api/customer/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('customerIf');   //this is misspelled in the API\nexpect(response.body).to.have.property('name');\nexpect(response.body).to.have.property('username');",
              "err": {},
              "uuid": "1893a730-1c70-4929-9238-94a6700dab1c",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get customer by name",
              "fullTitle": "Customer tests Get customer by name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "it('A costumer must be show', async () => {\n    const response = await get('http://localhost:8080/api/customer/username='+customerName)\n        .set('User-Agent', 'agent') /// borrar maybe(?)\n        .set('Content-Type', 'application/json')\n        .set('Accept','application/json');\n    expect(response.status).to.equal(StatusCodes.OK);\n    expect(response.body).to.have.property('name');\n    expect(response.body.name).to.equal(customerName);\n});",
              "err": {},
              "uuid": "583e0f17-ee26-42c0-9777-d12523149384",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Customer by Username",
              "fullTitle": "Customer tests Get Customer by Username",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const username = \"sallyv\";       /////Username\nconst response = await get('http://localhost:8080/api/customer/username='+username)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('username');\nexpect(response.body).to.have.property('customerIf');",
              "err": {},
              "uuid": "6551bdb6-fe64-4da3-8d5f-ae6373966e5a",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update customer",
              "fullTitle": "Customer tests Update customer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "it('The correct costumer should be update', async () => {\n    const customer = {\n        \"customerId\": customerTestId,\n        \"name\": \"Sally Vallery\",\n        \"address\": \"Arcane street\",\n        \"email\": \"jinxed@XD.com\",\n        \"phone\": \"32467991632\",\n        \"username\": \"definitelynotjinx\",\n        \"password\": \"wtfjinx\",\n        \"enabled\": \"true\",\n        \"role\": \"USER\"\n    };\n    \n    const response = await put('http://localhost:8080/api/customer/'+customerTestId)\n        .set('Content-type','application/json')\n        .set('Accept','application/json')\n        .send(customer);\n    expect(response.status).to.equal(StatusCodes.OK);\n    expect(response.body).to.have.property('customerId');\n    expect(response.body.address).to.equal(customer.address);\n    expect(response.body.address).to.equal(customer.email);\n    expect(response.body.phone).to.equal(customer.phone);\n    expect(response.body.address).to.equal(customer.username);\n    expect(response.body.password).to.equal(customer.password);\n});",
              "err": {},
              "uuid": "9518016f-3f36-4d17-a69a-d928418f8ee7",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete customer by Id",
              "fullTitle": "Customer tests Delete customer by Id",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = customerTestId;  // Deberiamos cambiar esto\nconst response = await ajax.del('http://localhost:8080/api/customer/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "bb39b0bc-7c00-48d1-b5ca-90875b841f6e",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete all customers in system",
              "fullTitle": "Customer tests Delete all customers in system",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.del(`http://localhost:8080/api/customer/`)\n        .set('User-Agent', 'agent')\n        .set('Content-Type', 'application/json');\n    expect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "5e873d95-e562-4505-82c6-05b5f49571a3",
              "parentUUID": "20a6e33c-9bb8-4aaa-9915-36cab1309ef0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63a51af7-22da-4547-bf4d-d7709fee82d1",
            "1893a730-1c70-4929-9238-94a6700dab1c",
            "583e0f17-ee26-42c0-9777-d12523149384",
            "6551bdb6-fe64-4da3-8d5f-ae6373966e5a",
            "9518016f-3f36-4d17-a69a-d928418f8ee7",
            "bb39b0bc-7c00-48d1-b5ca-90875b841f6e",
            "5e873d95-e562-4505-82c6-05b5f49571a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 201,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "3aaa9105-cb1a-4cc5-9a5a-b9ba921392a4",
          "title": "First Api Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/example.test.js",
          "file": "/test/api/example.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get('http://httpbin.org/ip');\n      \nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('origin');",
              "err": {},
              "uuid": "7205f623-23cb-4e20-bc3c-396c060bbb5c",
              "parentUUID": "3aaa9105-cb1a-4cc5-9a5a-b9ba921392a4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7205f623-23cb-4e20-bc3c-396c060bbb5c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 283,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "2891419e-dbf4-42ea-8f96-db0010ea05c1",
          "title": "Login And Purchase",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/loginAndPurchase.test.js",
          "file": "/test/api/loginAndPurchase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login",
              "fullTitle": "Login And Purchase login",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//aquí va la prueba",
              "err": {},
              "uuid": "56307e0a-8c31-407d-9f77-c1f36cd1d821",
              "parentUUID": "2891419e-dbf4-42ea-8f96-db0010ea05c1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purchase",
              "fullTitle": "Login And Purchase Purchase",
              "timedOut": false,
              "duration": 19,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.get('http://localhost:8080/purchase/')\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json')\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('message');",
              "err": {
                "message": "Error: Internal Server Error",
                "estack": "Error: Internal Server Error\n    at Request.callback (node_modules/superagent/lib/node/index.js:883:15)\n    at /mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/node_modules/superagent/lib/node/index.js:1127:20\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:22:7)\n    at endReadableNT (_stream_readable.js:1218:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
                "diff": null
              },
              "uuid": "5f637096-b4fa-4b7f-85fe-6e9b9e919f2b",
              "parentUUID": "2891419e-dbf4-42ea-8f96-db0010ea05c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "56307e0a-8c31-407d-9f77-c1f36cd1d821"
          ],
          "failures": [
            "5f637096-b4fa-4b7f-85fe-6e9b9e919f2b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
          "title": "Order Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/order.test.js",
          "file": "/test/api/order.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create an order",
              "fullTitle": "Order Tests Create an order",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.post('http://localhost:8080/api/order/')\n    .send({\n        \"orderId\": 1,\n        \"orderDate\": \"2017-02-28T19:52:39Z\",\n        \"customerId\": \"54321\",\n        \"productsOrdered\": { \"1\": 1, \"2\": 1, \"3\": 1 }\n    })\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property('orderId');\norderTestId = response.body.orderId;",
              "err": {},
              "uuid": "a51506bf-489a-4a05-a4e0-e17a268a9a1c",
              "parentUUID": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get all orders",
              "fullTitle": "Order Tests Get all orders",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "2f182605-3103-4446-bccf-8af77a1e72c3",
              "parentUUID": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get order by Id",
              "fullTitle": "Order Tests Get order by Id",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax.get('http://localhost:8080/api/order/'+id)\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('orderId');\nexpect(response.body).to.have.property('customerId');\nexpect(response.body).to.have.property('productsOrdered');",
              "err": {},
              "uuid": "afdba192-44d4-4a11-93b0-53e211ab2e1d",
              "parentUUID": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update an order",
              "fullTitle": "Order Tests Update an order",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "84b92ce7-825b-49f4-946d-7341422e8b9f",
              "parentUUID": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete order by Id",
              "fullTitle": "Order Tests Delete order by Id",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax.delete('http://localhost:8080/api/order/'+id)\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "60687e1a-f552-4895-b717-3a0582a57b04",
              "parentUUID": "6538452d-d06d-4ddc-9aa0-93f5f21f80ed",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a51506bf-489a-4a05-a4e0-e17a268a9a1c",
            "2f182605-3103-4446-bccf-8af77a1e72c3",
            "afdba192-44d4-4a11-93b0-53e211ab2e1d",
            "84b92ce7-825b-49f4-946d-7341422e8b9f",
            "60687e1a-f552-4895-b717-3a0582a57b04"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 105,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "852bea65-acb9-4ba2-b42d-11d935d9d895",
          "title": "Products",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/products.test.js",
          "file": "/test/api/products.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Getting all products",
              "fullTitle": "Products Getting all products",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.get('http://localhost:8080/api/product/')\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "90130211-76f6-4c41-a353-b4ef4c19e235",
              "parentUUID": "852bea65-acb9-4ba2-b42d-11d935d9d895",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting single product by ID",
              "fullTitle": "Products Getting single product by ID",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 1;\nconst response = await ajax.get('http://localhost:8080/api/product/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('description');\nexpect(response.body).to.have.property('name');\nexpect(response.body).to.have.property('productId');",
              "err": {},
              "uuid": "e1f45013-ecb5-4a90-b19d-be041aac4bbe",
              "parentUUID": "852bea65-acb9-4ba2-b42d-11d935d9d895",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "90130211-76f6-4c41-a353-b4ef4c19e235",
            "e1f45013-ecb5-4a90-b19d-be041aac4bbe"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "583202f9-e110-414c-8079-61ce77f0c8ae",
          "title": "System utilities Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/systemUtilities.test.js",
          "file": "/test/api/systemUtilities.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Database healtcheck",
              "fullTitle": "System utilities Tests Database healtcheck",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va la prueba",
              "err": {},
              "uuid": "1c721de6-a31a-4d29-bf2c-16e3608cebe0",
              "parentUUID": "583202f9-e110-414c-8079-61ce77f0c8ae",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting container ID using GET",
              "fullTitle": "System utilities Tests Getting container ID using GET",
              "timedOut": false,
              "duration": 13,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get('http://localhost:8080//utility/containerid/')\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('host');\nexpect(response.body).to.have.property('ip');",
              "err": {},
              "uuid": "bfdc3cc6-4eda-46cc-8e2c-0a28d68927f5",
              "parentUUID": "583202f9-e110-414c-8079-61ce77f0c8ae",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1c721de6-a31a-4d29-bf2c-16e3608cebe0",
            "bfdc3cc6-4eda-46cc-8e2c-0a28d68927f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 13,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [
        "bba6a6a7-0322-44a3-80d6-687833b53fc9",
        "4064737a-d976-4588-aa45-9436941f5ee3"
      ],
      "duration": 0,
      "root": true,
      "rootEmpty": false,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}