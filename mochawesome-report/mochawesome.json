{
  "stats": {
    "suites": 6,
    "tests": 19,
    "passes": 18,
    "pending": 0,
    "failures": 1,
    "start": "2021-12-05T06:13:26.094Z",
    "end": "2021-12-05T06:13:29.195Z",
    "duration": 3101,
    "testsRegistered": 19,
    "passPercent": 94.73684210526315,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "56e72fbd-52c8-4aee-860c-37ae294a31a3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "424c378d-d98f-42a6-a631-52a220ab491d",
          "title": "Customer tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/customer.test.js",
          "file": "/test/api/customer.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create customer",
              "fullTitle": "Customer tests Create customer",
              "timedOut": false,
              "duration": 1379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.post('http://localhost:8080/api/customer/')\n    .send({\n        \"customerId\" : 1,\n        \"name\"       : \"Sally Vallery\",\n        \"address\"    : \"144 Townsend, San Francisco 99999\",\n        \"email\"      : \"sally@example.com\",\n        \"phone\"      : \"513 222 5555\",\n        \"username\"   : \"sallyv\",\n        \"password\"   : \"sallypassword\",\n        \"enabled\"    : \"true\",\n        \"role\"       : \"USER\"\n    })\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property('customerId');\ncustomerTestId = response.body.customerId;",
              "err": {},
              "uuid": "0e840f3e-5d60-4cf8-b967-1e9ffb628fb4",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get customer by Id",
              "fullTitle": "Customer tests Get customer by Id",
              "timedOut": false,
              "duration": 229,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = customerTestId;   \nconst response = await get('http://localhost:8080/api/customer/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('customerIf');   //this is misspelled in the API\nexpect(response.body).to.have.property('name');\nexpect(response.body).to.have.property('username');",
              "err": {},
              "uuid": "a849e608-f5bd-42a9-8c18-c53a70ab664c",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get customer by name",
              "fullTitle": "Customer tests Get customer by name",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "44cd69cf-5534-4e9b-9b81-82d0b156af35",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Customer by Username",
              "fullTitle": "Customer tests Get Customer by Username",
              "timedOut": false,
              "duration": 55,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const username = \"sallyv\";   \nconst response = await get('http://localhost:8080/api/customer/username='+username)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('username');\nexpect(response.body).to.have.property('customerIf');",
              "err": {},
              "uuid": "d5a893ab-08fa-445c-bae5-8ecf268d6d28",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update customer",
              "fullTitle": "Customer tests Update customer",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "0c99056c-b153-48d0-b4d7-0361572b1aab",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete customer by Id",
              "fullTitle": "Customer tests Delete customer by Id",
              "timedOut": false,
              "duration": 97,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = customerTestId;\nconst response = await ajax.del('http://localhost:8080/api/customer/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "6130c33d-b99f-4c9b-a56b-2044a75615f9",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete all Customers",
              "fullTitle": "Customer tests Delete all Customers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "8e8a9aa6-6cc5-4384-ac28-7b5797c416ab",
              "parentUUID": "424c378d-d98f-42a6-a631-52a220ab491d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0e840f3e-5d60-4cf8-b967-1e9ffb628fb4",
            "a849e608-f5bd-42a9-8c18-c53a70ab664c",
            "44cd69cf-5534-4e9b-9b81-82d0b156af35",
            "d5a893ab-08fa-445c-bae5-8ecf268d6d28",
            "0c99056c-b153-48d0-b4d7-0361572b1aab",
            "6130c33d-b99f-4c9b-a56b-2044a75615f9",
            "8e8a9aa6-6cc5-4384-ac28-7b5797c416ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1760,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4adc502c-12c6-4070-828e-269ff7e49947",
          "title": "First Api Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/example.test.js",
          "file": "/test/api/example.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Consume GET Service",
              "fullTitle": "First Api Tests Consume GET Service",
              "timedOut": false,
              "duration": 386,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get('http://httpbin.org/ip');\n      \nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('origin');",
              "err": {},
              "uuid": "7560c878-be54-445d-8a3c-dfa29d898824",
              "parentUUID": "4adc502c-12c6-4070-828e-269ff7e49947",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7560c878-be54-445d-8a3c-dfa29d898824"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 386,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f100c6c4-bf5c-4847-a7c3-20a3db0403c0",
          "title": "Login And Purchase",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/loginAndPurchase.test.js",
          "file": "/test/api/loginAndPurchase.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "login",
              "fullTitle": "Login And Purchase login",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//aquí va la prueba",
              "err": {},
              "uuid": "00d4cd83-7676-464a-b475-6acc6ce13704",
              "parentUUID": "f100c6c4-bf5c-4847-a7c3-20a3db0403c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Purchase",
              "fullTitle": "Login And Purchase Purchase",
              "timedOut": false,
              "duration": 127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.get('http://localhost:8080/purchase/')\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json')\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('message');",
              "err": {
                "message": "Error: Internal Server Error",
                "estack": "Error: Internal Server Error\n    at Request.callback (node_modules/superagent/lib/node/index.js:883:15)\n    at /mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/node_modules/superagent/lib/node/index.js:1127:20\n    at IncomingMessage.<anonymous> (node_modules/superagent/lib/node/parsers/json.js:22:7)\n    at endReadableNT (_stream_readable.js:1218:12)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
                "diff": null
              },
              "uuid": "7d2c31dc-c139-4275-a017-77dfb2618cc9",
              "parentUUID": "f100c6c4-bf5c-4847-a7c3-20a3db0403c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "00d4cd83-7676-464a-b475-6acc6ce13704"
          ],
          "failures": [
            "7d2c31dc-c139-4275-a017-77dfb2618cc9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 127,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
          "title": "Order Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/order.test.js",
          "file": "/test/api/order.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create an order",
              "fullTitle": "Order Tests Create an order",
              "timedOut": false,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.post('http://localhost:8080/api/order/')\n    .send({\n        \"orderId\": 1,\n        \"orderDate\": \"2017-02-28T19:52:39Z\",\n        \"customerId\": \"54321\",\n        \"productsOrdered\": { \"1\": 1, \"2\": 1, \"3\": 1 }\n    })\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.CREATED);\nexpect(response.body).to.have.property('orderId');\norderTestId = response.body.orderId;",
              "err": {},
              "uuid": "157546ef-3ef5-4902-81ef-1b43d2b753fa",
              "parentUUID": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get all orders",
              "fullTitle": "Order Tests Get all orders",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "d898fe2b-567e-48fa-bf47-f500030d2d0a",
              "parentUUID": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get order by Id",
              "fullTitle": "Order Tests Get order by Id",
              "timedOut": false,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax.get('http://localhost:8080/api/order/'+id)\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('orderId');\nexpect(response.body).to.have.property('customerId');\nexpect(response.body).to.have.property('productsOrdered');",
              "err": {},
              "uuid": "6ad4cb71-be44-4d3c-873e-b67ff4333321",
              "parentUUID": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update an order",
              "fullTitle": "Order Tests Update an order",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va el test",
              "err": {},
              "uuid": "c0707a2d-eec2-404a-aabd-8ee36decc686",
              "parentUUID": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete order by Id",
              "fullTitle": "Order Tests Delete order by Id",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = orderTestId;\nconst response = await ajax.delete('http://localhost:8080/api/order/'+id)\n    .set('Content-type', 'application/json')\n    .set('Accept', 'application/json');\nexpect(response.status).to.equal(StatusCodes.NO_CONTENT);",
              "err": {},
              "uuid": "c72ef547-8d97-4e7e-8cd2-29870d85f054",
              "parentUUID": "6c92fd0c-1b9a-4987-ba64-01fdd6775a87",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "157546ef-3ef5-4902-81ef-1b43d2b753fa",
            "d898fe2b-567e-48fa-bf47-f500030d2d0a",
            "6ad4cb71-be44-4d3c-873e-b67ff4333321",
            "c0707a2d-eec2-404a-aabd-8ee36decc686",
            "c72ef547-8d97-4e7e-8cd2-29870d85f054"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 603,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "f8a35898-03bf-4e50-b465-f8f955d96903",
          "title": "Products",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/products.test.js",
          "file": "/test/api/products.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Getting all products",
              "fullTitle": "Products Getting all products",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await ajax.get('http://localhost:8080/api/product/')\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);",
              "err": {},
              "uuid": "e1fd25fb-81fc-4c85-990f-e94711a5d108",
              "parentUUID": "f8a35898-03bf-4e50-b465-f8f955d96903",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting single product by ID",
              "fullTitle": "Products Getting single product by ID",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const id = 1;\nconst response = await ajax.get('http://localhost:8080/api/product/'+id)\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('description');\nexpect(response.body).to.have.property('name');\nexpect(response.body).to.have.property('productId');",
              "err": {},
              "uuid": "143c345c-b8ae-4de9-b708-da9bff3e846e",
              "parentUUID": "f8a35898-03bf-4e50-b465-f8f955d96903",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e1fd25fb-81fc-4c85-990f-e94711a5d108",
            "143c345c-b8ae-4de9-b708-da9bff3e846e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 178,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "a6156cac-a2d0-456f-87f3-762d6c47fe5e",
          "title": "System utilities Tests",
          "fullFile": "/mnt/c/Users/Usuario/Desktop/Proyecto final team/atsea-sample-shop-app-automation-main/test/api/systemUtilities.test.js",
          "file": "/test/api/systemUtilities.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Database healtcheck",
              "fullTitle": "System utilities Tests Database healtcheck",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Aquí va la prueba",
              "err": {},
              "uuid": "af62c6df-0f7c-43c5-9917-27b5557e7277",
              "parentUUID": "a6156cac-a2d0-456f-87f3-762d6c47fe5e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Getting container ID using GET",
              "fullTitle": "System utilities Tests Getting container ID using GET",
              "timedOut": false,
              "duration": 15,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await get('http://localhost:8080//utility/containerid/')\n    .set('Content-type','application/json')\n    .set('Accept','application/json');\nexpect(response.status).to.equal(StatusCodes.OK);\nexpect(response.body).to.have.property('host');\nexpect(response.body).to.have.property('ip');",
              "err": {},
              "uuid": "d1444fbe-4993-44e3-b0f2-460db99d6264",
              "parentUUID": "a6156cac-a2d0-456f-87f3-762d6c47fe5e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af62c6df-0f7c-43c5-9917-27b5557e7277",
            "d1444fbe-4993-44e3-b0f2-460db99d6264"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": null,
      "version": "6.0.1"
    }
  }
}